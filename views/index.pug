html
  head
    title #{Title} 
    block head
    meta(name="viewport" content="initial-scale=1.0, user-scalable=no")
    link(rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.1/css/bootstrap.min.css')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(charset="utf-8")
    meta(http-equiv='X-UA-Compatible' content='ie=edge')

    style.
      /* Always set the map height explicitly to define the size of the div
      * element that contains the map. */
      #map {
      height: 50%;
      width: 50%;
      background-color: grey;
      }
      /* Optional: Makes the sample page fill the window. */
      html,
      body {
      height: 100%;
      width: 100%;
      margin: 0;
      padding: 0;
      }
      /* TODO: Step 4A1: Make a generic sidebar */
  body
  include includes/header.pug
  block main
    h1 Where&apos;s A Charger?
    .container#map
      script.
        /* Note: This example requires that you consent to location sharing when
        * prompted by your browser. If you see the error "Geolocation permission
        * denied.", it means you probably did not give permission for the browser * to locate you. */
        /* TODO: Step 2, Geolocate your user
        * Replace the code from here to the END TODO comment with this code
        * from codelab instructions. */
        let pos;
        let map;
        let bounds;
        let infoWindow;
        let currentInfoWindow;
        let service;
        let infoPane;
        function initMap() {
        // Initialize variables
        bounds = new google.maps.LatLngBounds();
        infoWindow = new google.maps.InfoWindow;
        currentInfoWindow = infoWindow;
        /* TODO: Step 4A3: Add a generic sidebar */
        // Try HTML5 geolocation
        if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(position => {
        pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
        };
        map = new google.maps.Map(document.getElementById('map'), {
        center: pos,
        zoom: 15
        });
        bounds.extend(pos);
        infoWindow.setPosition(pos);
        infoWindow.setContent('Location found.');
        infoWindow.open(map);
        map.setCenter(pos);
        /* TODO: Step 3B2, Call the Places Nearby Search */
        }, () => {
        // Browser supports geolocation, but user has denied permission
        handleLocationError(true, infoWindow);
        });
        } else {
        // Browser doesn't support geolocation
        handleLocationError(false, infoWindow);
        }
        }
        // Handle a geolocation error
        function handleLocationError(browserHasGeolocation, infoWindow) {
        // Set default location to Sydney, Australia
        pos = {lat: -33.856, lng: 151.215};
        map = new google.maps.Map(document.getElementById('map'), {
        center: pos,
        zoom: 15
        });
        // Display an InfoWindow at the map center
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
        'Geolocation permissions denied. Using default location.' :
        'Error: Your browser doesn\\t support geolocation.');
        infoWindow.open(map);
        currentInfoWindow = infoWindow;
        
        }
    // TODO: Step 3A, Load the Places Library
    script(async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6_0ao-hnjTGFAdtsfRhIKhm_BK2zhKMg&callback=initMap")
